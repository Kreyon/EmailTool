#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EmailTool")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertDraftEmailTable(DraftEmailTable instance);
  partial void UpdateDraftEmailTable(DraftEmailTable instance);
  partial void DeleteDraftEmailTable(DraftEmailTable instance);
  partial void InsertTrashMailsTable(TrashMailsTable instance);
  partial void UpdateTrashMailsTable(TrashMailsTable instance);
  partial void DeleteTrashMailsTable(TrashMailsTable instance);
  partial void InsertOutBoxMail(OutBoxMail instance);
  partial void UpdateOutBoxMail(OutBoxMail instance);
  partial void DeleteOutBoxMail(OutBoxMail instance);
  partial void InsertSendedMail(SendedMail instance);
  partial void UpdateSendedMail(SendedMail instance);
  partial void DeleteSendedMail(SendedMail instance);
  partial void InsertStarredEmailTable(StarredEmailTable instance);
  partial void UpdateStarredEmailTable(StarredEmailTable instance);
  partial void DeleteStarredEmailTable(StarredEmailTable instance);
  partial void InsertEmailConfig(EmailConfig instance);
  partial void UpdateEmailConfig(EmailConfig instance);
  partial void DeleteEmailConfig(EmailConfig instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EmailToolConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<DraftEmailTable> DraftEmailTables
	{
		get
		{
			return this.GetTable<DraftEmailTable>();
		}
	}
	
	public System.Data.Linq.Table<TrashMailsTable> TrashMailsTables
	{
		get
		{
			return this.GetTable<TrashMailsTable>();
		}
	}
	
	public System.Data.Linq.Table<OutBoxMail> OutBoxMails
	{
		get
		{
			return this.GetTable<OutBoxMail>();
		}
	}
	
	public System.Data.Linq.Table<SendedMail> SendedMails
	{
		get
		{
			return this.GetTable<SendedMail>();
		}
	}
	
	public System.Data.Linq.Table<StarredEmailTable> StarredEmailTables
	{
		get
		{
			return this.GetTable<StarredEmailTable>();
		}
	}
	
	public System.Data.Linq.Table<EmailConfig> EmailConfigs
	{
		get
		{
			return this.GetTable<EmailConfig>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DraftEmailTable")]
public partial class DraftEmailTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _UserId;
	
	private string _Draftpath;
	
	private EntityRef<EmailConfig> _EmailConfig;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDraftpathChanging(string value);
    partial void OnDraftpathChanged();
    #endregion
	
	public DraftEmailTable()
	{
		this._EmailConfig = default(EntityRef<EmailConfig>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
	public int UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._EmailConfig.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Draftpath", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Draftpath
	{
		get
		{
			return this._Draftpath;
		}
		set
		{
			if ((this._Draftpath != value))
			{
				this.OnDraftpathChanging(value);
				this.SendPropertyChanging();
				this._Draftpath = value;
				this.SendPropertyChanged("Draftpath");
				this.OnDraftpathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailConfig_DraftEmailTable", Storage="_EmailConfig", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public EmailConfig EmailConfig
	{
		get
		{
			return this._EmailConfig.Entity;
		}
		set
		{
			EmailConfig previousValue = this._EmailConfig.Entity;
			if (((previousValue != value) 
						|| (this._EmailConfig.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EmailConfig.Entity = null;
					previousValue.DraftEmailTables.Remove(this);
				}
				this._EmailConfig.Entity = value;
				if ((value != null))
				{
					value.DraftEmailTables.Add(this);
					this._UserId = value.Id;
				}
				else
				{
					this._UserId = default(int);
				}
				this.SendPropertyChanged("EmailConfig");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrashMailsTable")]
public partial class TrashMailsTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _UserID;
	
	private string _XMLPath;
	
	private string _EmailType;
	
	private string _InboxMailThreadID;
	
	private System.Nullable<bool> _IsDeleted;
	
	private EntityRef<EmailConfig> _EmailConfig;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnXMLPathChanging(string value);
    partial void OnXMLPathChanged();
    partial void OnEmailTypeChanging(string value);
    partial void OnEmailTypeChanged();
    partial void OnInboxMailThreadIDChanging(string value);
    partial void OnInboxMailThreadIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
	
	public TrashMailsTable()
	{
		this._EmailConfig = default(EntityRef<EmailConfig>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._EmailConfig.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XMLPath", DbType="NVarChar(100)")]
	public string XMLPath
	{
		get
		{
			return this._XMLPath;
		}
		set
		{
			if ((this._XMLPath != value))
			{
				this.OnXMLPathChanging(value);
				this.SendPropertyChanging();
				this._XMLPath = value;
				this.SendPropertyChanged("XMLPath");
				this.OnXMLPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string EmailType
	{
		get
		{
			return this._EmailType;
		}
		set
		{
			if ((this._EmailType != value))
			{
				this.OnEmailTypeChanging(value);
				this.SendPropertyChanging();
				this._EmailType = value;
				this.SendPropertyChanged("EmailType");
				this.OnEmailTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboxMailThreadID", DbType="NVarChar(200)")]
	public string InboxMailThreadID
	{
		get
		{
			return this._InboxMailThreadID;
		}
		set
		{
			if ((this._InboxMailThreadID != value))
			{
				this.OnInboxMailThreadIDChanging(value);
				this.SendPropertyChanging();
				this._InboxMailThreadID = value;
				this.SendPropertyChanged("InboxMailThreadID");
				this.OnInboxMailThreadIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
	public System.Nullable<bool> IsDeleted
	{
		get
		{
			return this._IsDeleted;
		}
		set
		{
			if ((this._IsDeleted != value))
			{
				this.OnIsDeletedChanging(value);
				this.SendPropertyChanging();
				this._IsDeleted = value;
				this.SendPropertyChanged("IsDeleted");
				this.OnIsDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailConfig_TrashMailsTable", Storage="_EmailConfig", ThisKey="UserID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public EmailConfig EmailConfig
	{
		get
		{
			return this._EmailConfig.Entity;
		}
		set
		{
			EmailConfig previousValue = this._EmailConfig.Entity;
			if (((previousValue != value) 
						|| (this._EmailConfig.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EmailConfig.Entity = null;
					previousValue.TrashMailsTables.Remove(this);
				}
				this._EmailConfig.Entity = value;
				if ((value != null))
				{
					value.TrashMailsTables.Add(this);
					this._UserID = value.Id;
				}
				else
				{
					this._UserID = default(int);
				}
				this.SendPropertyChanged("EmailConfig");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OutBoxMail")]
public partial class OutBoxMail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _UserId;
	
	private string _OutboxMailPath;
	
	private EntityRef<EmailConfig> _EmailConfig;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnOutboxMailPathChanging(string value);
    partial void OnOutboxMailPathChanged();
    #endregion
	
	public OutBoxMail()
	{
		this._EmailConfig = default(EntityRef<EmailConfig>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
	public int UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._EmailConfig.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutboxMailPath", DbType="NVarChar(MAX)")]
	public string OutboxMailPath
	{
		get
		{
			return this._OutboxMailPath;
		}
		set
		{
			if ((this._OutboxMailPath != value))
			{
				this.OnOutboxMailPathChanging(value);
				this.SendPropertyChanging();
				this._OutboxMailPath = value;
				this.SendPropertyChanged("OutboxMailPath");
				this.OnOutboxMailPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailConfig_OutBoxMail", Storage="_EmailConfig", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public EmailConfig EmailConfig
	{
		get
		{
			return this._EmailConfig.Entity;
		}
		set
		{
			EmailConfig previousValue = this._EmailConfig.Entity;
			if (((previousValue != value) 
						|| (this._EmailConfig.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EmailConfig.Entity = null;
					previousValue.OutBoxMails.Remove(this);
				}
				this._EmailConfig.Entity = value;
				if ((value != null))
				{
					value.OutBoxMails.Add(this);
					this._UserId = value.Id;
				}
				else
				{
					this._UserId = default(int);
				}
				this.SendPropertyChanged("EmailConfig");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SendedMail")]
public partial class SendedMail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _UserId;
	
	private string _SendMailPath;
	
	private EntityRef<EmailConfig> _EmailConfig;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSendMailPathChanging(string value);
    partial void OnSendMailPathChanged();
    #endregion
	
	public SendedMail()
	{
		this._EmailConfig = default(EntityRef<EmailConfig>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
	public int UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._EmailConfig.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendMailPath", DbType="NVarChar(MAX)")]
	public string SendMailPath
	{
		get
		{
			return this._SendMailPath;
		}
		set
		{
			if ((this._SendMailPath != value))
			{
				this.OnSendMailPathChanging(value);
				this.SendPropertyChanging();
				this._SendMailPath = value;
				this.SendPropertyChanged("SendMailPath");
				this.OnSendMailPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailConfig_SendedMail", Storage="_EmailConfig", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public EmailConfig EmailConfig
	{
		get
		{
			return this._EmailConfig.Entity;
		}
		set
		{
			EmailConfig previousValue = this._EmailConfig.Entity;
			if (((previousValue != value) 
						|| (this._EmailConfig.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EmailConfig.Entity = null;
					previousValue.SendedMails.Remove(this);
				}
				this._EmailConfig.Entity = value;
				if ((value != null))
				{
					value.SendedMails.Add(this);
					this._UserId = value.Id;
				}
				else
				{
					this._UserId = default(int);
				}
				this.SendPropertyChanged("EmailConfig");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StarredEmailTable")]
public partial class StarredEmailTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _UserId;
	
	private string _EmailId;
	
	private System.Nullable<bool> _IsInbox;
	
	private string _XmlPath;
	
	private string _From1;
	
	private EntityRef<EmailConfig> _EmailConfig;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnEmailIdChanging(string value);
    partial void OnEmailIdChanged();
    partial void OnIsInboxChanging(System.Nullable<bool> value);
    partial void OnIsInboxChanged();
    partial void OnXmlPathChanging(string value);
    partial void OnXmlPathChanged();
    partial void OnFrom1Changing(string value);
    partial void OnFrom1Changed();
    #endregion
	
	public StarredEmailTable()
	{
		this._EmailConfig = default(EntityRef<EmailConfig>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
	public int UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._EmailConfig.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="NVarChar(200)")]
	public string EmailId
	{
		get
		{
			return this._EmailId;
		}
		set
		{
			if ((this._EmailId != value))
			{
				this.OnEmailIdChanging(value);
				this.SendPropertyChanging();
				this._EmailId = value;
				this.SendPropertyChanged("EmailId");
				this.OnEmailIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInbox", DbType="Bit")]
	public System.Nullable<bool> IsInbox
	{
		get
		{
			return this._IsInbox;
		}
		set
		{
			if ((this._IsInbox != value))
			{
				this.OnIsInboxChanging(value);
				this.SendPropertyChanging();
				this._IsInbox = value;
				this.SendPropertyChanged("IsInbox");
				this.OnIsInboxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlPath", DbType="NVarChar(100)")]
	public string XmlPath
	{
		get
		{
			return this._XmlPath;
		}
		set
		{
			if ((this._XmlPath != value))
			{
				this.OnXmlPathChanging(value);
				this.SendPropertyChanging();
				this._XmlPath = value;
				this.SendPropertyChanged("XmlPath");
				this.OnXmlPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_From1", DbType="NVarChar(50)")]
	public string From1
	{
		get
		{
			return this._From1;
		}
		set
		{
			if ((this._From1 != value))
			{
				this.OnFrom1Changing(value);
				this.SendPropertyChanging();
				this._From1 = value;
				this.SendPropertyChanged("From1");
				this.OnFrom1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailConfig_StarredEmailTable", Storage="_EmailConfig", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
	public EmailConfig EmailConfig
	{
		get
		{
			return this._EmailConfig.Entity;
		}
		set
		{
			EmailConfig previousValue = this._EmailConfig.Entity;
			if (((previousValue != value) 
						|| (this._EmailConfig.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EmailConfig.Entity = null;
					previousValue.StarredEmailTables.Remove(this);
				}
				this._EmailConfig.Entity = value;
				if ((value != null))
				{
					value.StarredEmailTables.Add(this);
					this._UserId = value.Id;
				}
				else
				{
					this._UserId = default(int);
				}
				this.SendPropertyChanged("EmailConfig");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailConfig")]
public partial class EmailConfig : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private int _UserId;
	
	private string _Access;
	
	private string _Host;
	
	private string _Port;
	
	private string _SmtpServer;
	
	private string _Username;
	
	private string _Password;
	
	private System.Nullable<bool> _IsDeleted;
	
	private string _SmtpPort;
	
	private string _Signature;
	
	private System.Nullable<bool> _IsReply;
	
	private System.Nullable<bool> _IsReplyAll;
	
	private System.Nullable<bool> _IsCompose;
	
	private System.Nullable<bool> _IsForward;
	
	private EntitySet<DraftEmailTable> _DraftEmailTables;
	
	private EntitySet<TrashMailsTable> _TrashMailsTables;
	
	private EntitySet<OutBoxMail> _OutBoxMails;
	
	private EntitySet<SendedMail> _SendedMails;
	
	private EntitySet<StarredEmailTable> _StarredEmailTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnAccessChanging(string value);
    partial void OnAccessChanged();
    partial void OnHostChanging(string value);
    partial void OnHostChanged();
    partial void OnPortChanging(string value);
    partial void OnPortChanged();
    partial void OnSmtpServerChanging(string value);
    partial void OnSmtpServerChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnSmtpPortChanging(string value);
    partial void OnSmtpPortChanged();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnIsReplyChanging(System.Nullable<bool> value);
    partial void OnIsReplyChanged();
    partial void OnIsReplyAllChanging(System.Nullable<bool> value);
    partial void OnIsReplyAllChanged();
    partial void OnIsComposeChanging(System.Nullable<bool> value);
    partial void OnIsComposeChanged();
    partial void OnIsForwardChanging(System.Nullable<bool> value);
    partial void OnIsForwardChanged();
    #endregion
	
	public EmailConfig()
	{
		this._DraftEmailTables = new EntitySet<DraftEmailTable>(new Action<DraftEmailTable>(this.attach_DraftEmailTables), new Action<DraftEmailTable>(this.detach_DraftEmailTables));
		this._TrashMailsTables = new EntitySet<TrashMailsTable>(new Action<TrashMailsTable>(this.attach_TrashMailsTables), new Action<TrashMailsTable>(this.detach_TrashMailsTables));
		this._OutBoxMails = new EntitySet<OutBoxMail>(new Action<OutBoxMail>(this.attach_OutBoxMails), new Action<OutBoxMail>(this.detach_OutBoxMails));
		this._SendedMails = new EntitySet<SendedMail>(new Action<SendedMail>(this.attach_SendedMails), new Action<SendedMail>(this.detach_SendedMails));
		this._StarredEmailTables = new EntitySet<StarredEmailTable>(new Action<StarredEmailTable>(this.attach_StarredEmailTables), new Action<StarredEmailTable>(this.detach_StarredEmailTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
	public int UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Access", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Access
	{
		get
		{
			return this._Access;
		}
		set
		{
			if ((this._Access != value))
			{
				this.OnAccessChanging(value);
				this.SendPropertyChanging();
				this._Access = value;
				this.SendPropertyChanged("Access");
				this.OnAccessChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Host", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Host
	{
		get
		{
			return this._Host;
		}
		set
		{
			if ((this._Host != value))
			{
				this.OnHostChanging(value);
				this.SendPropertyChanging();
				this._Host = value;
				this.SendPropertyChanged("Host");
				this.OnHostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Port
	{
		get
		{
			return this._Port;
		}
		set
		{
			if ((this._Port != value))
			{
				this.OnPortChanging(value);
				this.SendPropertyChanging();
				this._Port = value;
				this.SendPropertyChanged("Port");
				this.OnPortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmtpServer", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string SmtpServer
	{
		get
		{
			return this._SmtpServer;
		}
		set
		{
			if ((this._SmtpServer != value))
			{
				this.OnSmtpServerChanging(value);
				this.SendPropertyChanging();
				this._SmtpServer = value;
				this.SendPropertyChanged("SmtpServer");
				this.OnSmtpServerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
	public System.Nullable<bool> IsDeleted
	{
		get
		{
			return this._IsDeleted;
		}
		set
		{
			if ((this._IsDeleted != value))
			{
				this.OnIsDeletedChanging(value);
				this.SendPropertyChanging();
				this._IsDeleted = value;
				this.SendPropertyChanged("IsDeleted");
				this.OnIsDeletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmtpPort", DbType="NVarChar(50)")]
	public string SmtpPort
	{
		get
		{
			return this._SmtpPort;
		}
		set
		{
			if ((this._SmtpPort != value))
			{
				this.OnSmtpPortChanging(value);
				this.SendPropertyChanging();
				this._SmtpPort = value;
				this.SendPropertyChanged("SmtpPort");
				this.OnSmtpPortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="NVarChar(MAX)")]
	public string Signature
	{
		get
		{
			return this._Signature;
		}
		set
		{
			if ((this._Signature != value))
			{
				this.OnSignatureChanging(value);
				this.SendPropertyChanging();
				this._Signature = value;
				this.SendPropertyChanged("Signature");
				this.OnSignatureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReply", DbType="Bit")]
	public System.Nullable<bool> IsReply
	{
		get
		{
			return this._IsReply;
		}
		set
		{
			if ((this._IsReply != value))
			{
				this.OnIsReplyChanging(value);
				this.SendPropertyChanging();
				this._IsReply = value;
				this.SendPropertyChanged("IsReply");
				this.OnIsReplyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplyAll", DbType="Bit")]
	public System.Nullable<bool> IsReplyAll
	{
		get
		{
			return this._IsReplyAll;
		}
		set
		{
			if ((this._IsReplyAll != value))
			{
				this.OnIsReplyAllChanging(value);
				this.SendPropertyChanging();
				this._IsReplyAll = value;
				this.SendPropertyChanged("IsReplyAll");
				this.OnIsReplyAllChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompose", DbType="Bit")]
	public System.Nullable<bool> IsCompose
	{
		get
		{
			return this._IsCompose;
		}
		set
		{
			if ((this._IsCompose != value))
			{
				this.OnIsComposeChanging(value);
				this.SendPropertyChanging();
				this._IsCompose = value;
				this.SendPropertyChanged("IsCompose");
				this.OnIsComposeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForward", DbType="Bit")]
	public System.Nullable<bool> IsForward
	{
		get
		{
			return this._IsForward;
		}
		set
		{
			if ((this._IsForward != value))
			{
				this.OnIsForwardChanging(value);
				this.SendPropertyChanging();
				this._IsForward = value;
				this.SendPropertyChanged("IsForward");
				this.OnIsForwardChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailConfig_DraftEmailTable", Storage="_DraftEmailTables", ThisKey="Id", OtherKey="UserId")]
	public EntitySet<DraftEmailTable> DraftEmailTables
	{
		get
		{
			return this._DraftEmailTables;
		}
		set
		{
			this._DraftEmailTables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailConfig_TrashMailsTable", Storage="_TrashMailsTables", ThisKey="Id", OtherKey="UserID")]
	public EntitySet<TrashMailsTable> TrashMailsTables
	{
		get
		{
			return this._TrashMailsTables;
		}
		set
		{
			this._TrashMailsTables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailConfig_OutBoxMail", Storage="_OutBoxMails", ThisKey="Id", OtherKey="UserId")]
	public EntitySet<OutBoxMail> OutBoxMails
	{
		get
		{
			return this._OutBoxMails;
		}
		set
		{
			this._OutBoxMails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailConfig_SendedMail", Storage="_SendedMails", ThisKey="Id", OtherKey="UserId")]
	public EntitySet<SendedMail> SendedMails
	{
		get
		{
			return this._SendedMails;
		}
		set
		{
			this._SendedMails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmailConfig_StarredEmailTable", Storage="_StarredEmailTables", ThisKey="Id", OtherKey="UserId")]
	public EntitySet<StarredEmailTable> StarredEmailTables
	{
		get
		{
			return this._StarredEmailTables;
		}
		set
		{
			this._StarredEmailTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_DraftEmailTables(DraftEmailTable entity)
	{
		this.SendPropertyChanging();
		entity.EmailConfig = this;
	}
	
	private void detach_DraftEmailTables(DraftEmailTable entity)
	{
		this.SendPropertyChanging();
		entity.EmailConfig = null;
	}
	
	private void attach_TrashMailsTables(TrashMailsTable entity)
	{
		this.SendPropertyChanging();
		entity.EmailConfig = this;
	}
	
	private void detach_TrashMailsTables(TrashMailsTable entity)
	{
		this.SendPropertyChanging();
		entity.EmailConfig = null;
	}
	
	private void attach_OutBoxMails(OutBoxMail entity)
	{
		this.SendPropertyChanging();
		entity.EmailConfig = this;
	}
	
	private void detach_OutBoxMails(OutBoxMail entity)
	{
		this.SendPropertyChanging();
		entity.EmailConfig = null;
	}
	
	private void attach_SendedMails(SendedMail entity)
	{
		this.SendPropertyChanging();
		entity.EmailConfig = this;
	}
	
	private void detach_SendedMails(SendedMail entity)
	{
		this.SendPropertyChanging();
		entity.EmailConfig = null;
	}
	
	private void attach_StarredEmailTables(StarredEmailTable entity)
	{
		this.SendPropertyChanging();
		entity.EmailConfig = this;
	}
	
	private void detach_StarredEmailTables(StarredEmailTable entity)
	{
		this.SendPropertyChanging();
		entity.EmailConfig = null;
	}
}
#pragma warning restore 1591
